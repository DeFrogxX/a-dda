#summary Setting up MinGW environment to compile ADDA on Windows

<wiki:toc/>

= Basic installation =
Here we describe the simplest way to install MinGW to be able to compile *ADDA* using provided `Makefile`. The description is based on the [http://mingw.org/wiki/Getting_Started MinGW instructions]:
 * Download the latest version of the [http://sourceforge.net/projects/mingw/files/Automated%20MinGW%20Installer/mingw-get/ mingw-get] installer and extract the files to the `C:\MinGW` directory. Other paths can also be used.
 * Open command prompt and run
{{{
cd C:\MinGW\bin
mingw-get install gcc fortran c++ msys-base
}}}
 * Add `C:\MinGW\bin` and `C:\MinGW\MSYS\1.0\bin` to Windows environmental variable `PATH`. This will give you direct access to `gcc` and `make`.

Now you are ready to compile *ADDA*. The only drawback of the concise procedure, described above, is that one need to manually  specify include and library paths for external packages, such as [InstallingFFTW3 FFTW 3], in makefiles.
 
= Advanced options =
These options may be of interest to developers or to those, who plan to compile *ADDA* many times with different options. These steps should be performed after the basic steps, described above.

To avoid need to manually  specify include and library paths for external packages in makefiles, do the following (based on [http://www.mingw.org/wiki/SpecsFileHOWTO MinGW instructions]): 
 * Copy all headers and libraries of external packages (such as [InstallingFFTW3 FFTW 3], [InstallingMPI MPI], or [OpenCL OpenCL]) to `C:\MinGW\MSYS\1.0\local\include` and `C:\MinGW\MSYS\1.0\local\lib` respectively (creating these folders if they do not exist).
 * Look for file `specs` in folder `C:\MinGW\lib\gcc\mingw32\<gcc-version>\specs`, where `<gcc-version>` is the version of the `gcc` installed. If it does not exist, execute
{{{
gcc -dumpspecs > C:/MinGW/lib/gcc/mingw32/<gcc-version>/specs
}}}
 * Modify `specs` file:
   * Add the following to the beginning:
{{{
*local_prefix:
c:/MinGW/msys/1.0/local/

*local_includes:
-I%(local_prefix)include

*local_lib_search:
-L%(local_prefix)lib
}}}
   * Add `%(local_includes)` to end of definition for `cpp`, changing it to, e.g.,
{{{
*cpp:
%{posix:-D_POSIX_SOURCE} %{mthreads:-D_MT} %(local_includes)
}}}
   * Add `%(local_includes)` to end of definition for `cc1plus`, changing it to, e.g.,
{{{
*cc1plus:
%(local_includes)
}}}
   * Add `%(local_includes)` to end of definition for `link_libgcc`, changing it to, e.g.,
{{{
*link_libgcc:
%D %(local_lib_search)
}}}

To enable debugging of *ADDA* install `gdb`
{{{
mingw-get gdb
}}}