# Makefile for MPI version of ADDA package
# Most options are defined in Makefile
# AUTH: Maxim Yurkin

#==========================================================
# !!! Start of control section. Flags and options here are designed to be
# modified by user to choose particular options for compilation. However, the
# default set of options may work out-of-box on some systems.  
#==========================================================

# Either use compiler directly or use MPI wrapper
#MPICC = $(CC)
MPICC = mpicc

# Compiler dependent options
ifeq ($(COMPILER),gnu)
endif
ifeq ($(COMPILER),intel9.x)
  # this may help to eliminate some problems with static linking using 
  # Intel MPICH, but this library may be not present in some installations
  LDLIBS += -lifcore
endif  
ifeq ($(COMPILER),intel9.x_ns)
endif  
ifeq ($(COMPILER),intel8.1)
  # this may help to eliminate some problems with static linking using
  # Intel MPICH, but this library may be not present in some installations
  LDLIBS += -lifcore
endif  
# This are options for a particular Alpha system
ifeq ($(COMPILER),compaq)
  MPICC = cc
  LDLIBS += -lmpi -lelan
endif
ifeq ($(COMPILER),other)
endif  

# If the compiler is used directly, few additional options are needed
ifeq ($(MPICC),$(CC))
  # Depending on a particular MPI installation it may be required to manually
  # specify paths to MPI headers and libraries
  #CFLAGS += -I"/C/Program Files/MPICH2/include"
  #LFLAGS += -L"/C/Program Files/MPICH2/lib"
  
  LDLIBS += -lmpi
# If MPI compiler wrapper is used, a few environmental variables are set
else
  # These are used by MPICH, other implementations may also need something
  export MPICH_CC = $(CC)
  export MPICH_CLINKER = $(CC)
endif

#===============================================================================
# !!! End of control section. Everything below is not designed to be modified by
# user
#===============================================================================

# Finalize flags
CFLAGS += -DMPI
MFILES += make_mpi

#===============================================================================
# Main action part
#===============================================================================

.DELETE_ON_ERROR:


$(PROG): $(COBJECTS) $(FOBJECTS) 
	$(MPICC) -o $@ $(LFLAGS) $(COBJECTS) $(FOBJECTS) $(LDLIBS)

# Everything is recompiled (but not dependencies) when any of makefiles is changed)
$(COBJECTS): %.o: %.c %.d $(MFILES)
	$(MPICC) -c $(CFLAGS) $<

$(FOBJECTS): %.o: %.f $(MFILES)
	$(CF) -c $(FFLAGS) $<

# Dependencies are only generated for C sources;
# we assume that each Fortran file is completely independent

$(CDEPEND): %.d: %.c
	$(MPICC) $(DEPFLAG) $(CFLAGS) $< > $@.$$$$; \
	sed 's,\($*\)\.o[ :]*,\1.o $@ : ,g' < $@.$$$$ > $@; \
	rm -f $@.$$$$

include $(CDEPEND)
